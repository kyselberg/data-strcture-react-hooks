---
import CodeExample from '../../components/CodeExample.astro';
import Layout from '../../layouts/Layout.astro';
---

<Layout title="Getting Started - Data Structure React Hooks">
  <div class="max-w-4xl mx-auto">
    <div class="mb-8">
      <nav class="text-sm text-gray-500 mb-4">
        <a href="/" class="hover:text-blue-600">Home</a>
        <span class="mx-2">/</span>
        <a href="/docs" class="hover:text-blue-600">Docs</a>
        <span class="mx-2">/</span>
        <span>Getting Started</span>
      </nav>
      <h1 class="text-4xl font-bold text-gray-900 mb-4">Getting Started</h1>
      <p class="text-xl text-gray-600">
        Learn how to install and use Data Structure React Hooks in your project.
      </p>
    </div>

    <div class="prose prose-lg max-w-none">
      <h2>Installation</h2>
      <p>
        Install the package using npm, yarn, or pnpm:
      </p>

      <CodeExample code="npm install data-strcture-react-hooks" />

      <h2>Basic Usage</h2>
      <p>
        Import the hooks you need and use them in your React components:
      </p>

      <CodeExample code={`import { useArray, useMap, useSet, useQueue, useStack } from 'data-strcture-react-hooks';

function MyComponent() {
  const array = useArray([1, 2, 3]);
  const map = useMap([['key1', 'value1']]);
  const set = useSet([1, 2, 3]);

  return (
    <div>
      <button onClick={() => array.push(4)}>Add to Array</button>
      <button onClick={() => map.set('key2', 'value2')}>Add to Map</button>
      <button onClick={() => set.add(4)}>Add to Set</button>
    </div>
  );
}`} />

      <h2>Key Features</h2>
      <ul>
        <li><strong>Automatic Re-rendering:</strong> All mutations automatically trigger component re-renders</li>
        <li><strong>Native API:</strong> Use familiar methods like push, pop, set, delete, etc.</li>
        <li><strong>TypeScript Support:</strong> Full TypeScript support with proper type inference</li>
        <li><strong>Zero Configuration:</strong> Works out of the box with no setup required</li>
      </ul>

      <h2>Quick Examples</h2>

      <h3>useArray</h3>
      <CodeExample code={`const array = useArray([1, 2, 3]);

// These operations will trigger re-renders
array.push(4);        // [1, 2, 3, 4]
array.pop();          // [1, 2, 3]
array.splice(1, 1);   // [1, 3]
array.reverse();      // [3, 1]`} />

      <h3>useMap</h3>
      <CodeExample code={`const map = useMap([['a', 1], ['b', 2]]);

// These operations will trigger re-renders
map.set('c', 3);      // Map(3) { 'a' => 1, 'b' => 2, 'c' => 3 }
map.delete('a');       // Map(2) { 'b' => 2, 'c' => 3 }
map.clear();           // Map(0) {}`} />

      <h3>useSet</h3>
      <CodeExample code={`const set = useSet([1, 2, 3]);

// These operations will trigger re-renders
set.add(4);           // Set(4) { 1, 2, 3, 4 }
set.delete(1);        // Set(3) { 2, 3, 4 }
set.clear();           // Set(0) {}`} />

      <h2>Next Steps</h2>
      <p>
        Now that you have the basics, explore the individual hooks to learn more about their specific APIs and use cases:
      </p>

      <div class="grid md:grid-cols-2 gap-4 mt-6">
        <a href="/docs/hooks/useArray" class="block p-4 border border-gray-200 rounded-lg hover:border-blue-300 hover:bg-blue-50 transition-colors">
          <h3 class="font-semibold text-gray-900">useArray</h3>
          <p class="text-gray-600 text-sm">Learn about reactive arrays</p>
        </a>
        <a href="/docs/hooks/useMap" class="block p-4 border border-gray-200 rounded-lg hover:border-blue-300 hover:bg-blue-50 transition-colors">
          <h3 class="font-semibold text-gray-900">useMap</h3>
          <p class="text-gray-600 text-sm">Learn about reactive maps</p>
        </a>
        <a href="/docs/hooks/useSet" class="block p-4 border border-gray-200 rounded-lg hover:border-blue-300 hover:bg-blue-50 transition-colors">
          <h3 class="font-semibold text-gray-900">useSet</h3>
          <p class="text-gray-600 text-sm">Learn about reactive sets</p>
        </a>
        <a href="/docs/hooks/useQueue" class="block p-4 border border-gray-200 rounded-lg hover:border-blue-300 hover:bg-blue-50 transition-colors">
          <h3 class="font-semibold text-gray-900">useQueue</h3>
          <p class="text-gray-600 text-sm">Learn about reactive queues</p>
        </a>
        <a href="/docs/hooks/useStack" class="block p-4 border border-gray-200 rounded-lg hover:border-blue-300 hover:bg-blue-50 transition-colors">
          <h3 class="font-semibold text-gray-900">useStack</h3>
          <p class="text-gray-600 text-sm">Learn about reactive stacks</p>
        </a>
      </div>
    </div>
  </div>
</Layout>