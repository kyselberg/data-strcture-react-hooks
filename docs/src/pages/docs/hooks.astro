---
import Layout from '../../layouts/Layout.astro';
---

<Layout title="Hooks - Data Structure React Hooks">
  <div class="max-w-4xl mx-auto">
    <div class="mb-8">
      <nav class="text-sm text-gray-500 mb-4">
        <a href="/" class="hover:text-blue-600">Home</a>
        <span class="mx-2">/</span>
        <a href="/docs" class="hover:text-blue-600">Docs</a>
        <span class="mx-2">/</span>
        <span>Hooks</span>
      </nav>
      <h1 class="text-4xl font-bold text-gray-900 mb-4">Hooks</h1>
      <p class="text-xl text-gray-600">
        Explore all available hooks and their capabilities.
      </p>
    </div>

    <div class="grid gap-8">
      <!-- useArray -->
      <div class="bg-white p-8 rounded-lg shadow-sm border border-gray-200">
        <div class="flex items-center mb-4">
          <div class="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mr-4">
            <span class="text-blue-600 font-bold text-lg">A</span>
          </div>
          <div>
            <h2 class="text-2xl font-bold text-gray-900">useArray</h2>
            <p class="text-gray-600">Reactive array with automatic re-rendering</p>
          </div>
        </div>
        <p class="text-gray-700 mb-4">
          A hook that returns a reactive array with all native Array methods (push, pop, splice, etc.)
          that automatically trigger component re-renders when the array is mutated.
        </p>
        <div class="flex items-center space-x-4">
          <a href="/docs/hooks/useArray" class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors">
            View Documentation
          </a>
          <span class="text-sm text-gray-500">Supports all Array methods</span>
        </div>
      </div>

      <!-- useMap -->
      <div class="bg-white p-8 rounded-lg shadow-sm border border-gray-200">
        <div class="flex items-center mb-4">
          <div class="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mr-4">
            <span class="text-green-600 font-bold text-lg">M</span>
          </div>
          <div>
            <h2 class="text-2xl font-bold text-gray-900">useMap</h2>
            <p class="text-gray-600">Reactive Map with automatic re-rendering</p>
          </div>
        </div>
        <p class="text-gray-700 mb-4">
          A hook that returns a reactive Map with set, delete, and clear operations
          that automatically trigger component re-renders when the map is mutated.
        </p>
        <div class="flex items-center space-x-4">
          <a href="/docs/hooks/useMap" class="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors">
            View Documentation
          </a>
          <span class="text-sm text-gray-500">Supports set, delete, clear</span>
        </div>
      </div>

      <!-- useSet -->
      <div class="bg-white p-8 rounded-lg shadow-sm border border-gray-200">
        <div class="flex items-center mb-4">
          <div class="w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mr-4">
            <span class="text-purple-600 font-bold text-lg">S</span>
          </div>
          <div>
            <h2 class="text-2xl font-bold text-gray-900">useSet</h2>
            <p class="text-gray-600">Reactive Set with automatic re-rendering</p>
          </div>
        </div>
        <p class="text-gray-700 mb-4">
          A hook that returns a reactive Set with add, delete, and clear operations
          that automatically trigger component re-renders when the set is mutated.
        </p>
        <div class="flex items-center space-x-4">
          <a href="/docs/hooks/useSet" class="bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700 transition-colors">
            View Documentation
          </a>
          <span class="text-sm text-gray-500">Supports add, delete, clear</span>
        </div>
      </div>

      <!-- useQueue -->
      <div class="bg-white p-8 rounded-lg shadow-sm border border-gray-200">
        <div class="flex items-center mb-4">
          <div class="w-12 h-12 bg-orange-100 rounded-lg flex items-center justify-center mr-4">
            <span class="text-orange-600 font-bold text-lg">Q</span>
          </div>
          <div>
            <h2 class="text-2xl font-bold text-gray-900">useQueue</h2>
            <p class="text-gray-600">Reactive Queue implementation</p>
          </div>
        </div>
        <p class="text-gray-700 mb-4">
          A hook that returns a reactive Queue with enqueue, dequeue, peek, and isEmpty operations
          that automatically trigger component re-renders when the queue is modified.
        </p>
        <div class="flex items-center space-x-4">
          <a href="/docs/hooks/useQueue" class="bg-orange-600 text-white px-4 py-2 rounded-lg hover:bg-orange-700 transition-colors">
            View Documentation
          </a>
          <span class="text-sm text-gray-500">Supports enqueue, dequeue, peek, isEmpty</span>
        </div>
      </div>

      <!-- useStack -->
      <div class="bg-white p-8 rounded-lg shadow-sm border border-gray-200">
        <div class="flex items-center mb-4">
          <div class="w-12 h-12 bg-red-100 rounded-lg flex items-center justify-center mr-4">
            <span class="text-red-600 font-bold text-lg">S</span>
          </div>
          <div>
            <h2 class="text-2xl font-bold text-gray-900">useStack</h2>
            <p class="text-gray-600">Reactive Stack implementation</p>
          </div>
        </div>
        <p class="text-gray-700 mb-4">
          A hook that returns a reactive Stack with push, pop, peek, and isEmpty operations
          that automatically trigger component re-renders when the stack is modified.
        </p>
        <div class="flex items-center space-x-4">
          <a href="/docs/hooks/useStack" class="bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors">
            View Documentation
          </a>
          <span class="text-sm text-gray-500">Supports push, pop, peek, isEmpty</span>
        </div>
      </div>
    </div>
  </div>
</Layout>